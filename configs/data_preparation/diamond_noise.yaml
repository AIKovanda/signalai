datasets:
  diamond_loc00:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc00.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc00.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc00.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc00.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc01:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc01.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc01.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc01.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc01.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc02:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc02.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc02.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc02.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc02.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc03:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc03.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc03.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc03.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc03.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc04:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc04.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc04.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc04.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc04.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc05:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc05.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc05.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc05.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc05.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc06:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc06.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc06.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc06.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc06.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc07:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc07.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc07.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc07.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc07.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc08:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc08.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc08.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc08.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc08.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  diamond_loc09:
    folder: '/mnt/AXAGO/Martin/signalai/diamond/AEforANN-tube1-diamond'
    channels:
      - re_path: '.*loc09.*ch(?P<channel>1).*.bin'
      - re_path: '.*loc09.*ch(?P<channel>2).*.bin'
      - re_path: '.*loc09.*ch(?P<channel>3).*.bin'
      - re_path: '.*loc09.*ch(?P<channel>4).*.bin'
    splittable: false
    standardize: true
  noise:
    folder: '/mnt/AXAGO/Martin/signalai/noise'
    channels:
      - re_path: '.*ch(?P<channel>1).*.bin'
      - re_path: '.*ch(?P<channel>2).*.bin'
      - re_path: '.*ch(?P<channel>3).*.bin'
      - re_path: '.*ch(?P<channel>4).*.bin'
    splittable: true
#    relevant_intervals:
#      - [456, 83456]  # in values
    op_dtype: float16
    to_ram: False
#    adjustments: [0, -400, 5, -15]


default_signal_info:
  source_dtype: 'float32'
  big_endian: true
  signed: true
  fs: 1562500
  op_dtype: float16
  to_ram: True
  split: [0.5,0.25,0.25]


manager_config:
  type: simple_manager

  transformers:
    standardizer:
      class: signalai.signal.transformers.Standardizer
      params:
        mean: 0
        std: 1

  tracks:
    t0:
      datasets:
      - diamond_loc[\d]
      equal_category: true
      next_after_samples: false
      max_signal_length: 100000
    t1:
      datasets:
      - noise
      next_after_samples: false
      max_signal_length: 100000

  X: "standardizer(t0) + (standardizer(t1) * np.random.uniform(0.1,0.2))"
  Y: "t0.category"

default_tracks_config:
  equal_category: true
  next_after_samples: false
  max_signal_length: 100000
  length: 100000


#denoise:
#  X: "standardizer(t0.signal) + standardizer(t1.signal) * 0.2"
#  Y: "t0.signal"
#tick_combination:
#  X: "t0.signal"
#  Y: "t0.category"

