tasks: signalai.tasks.data_preparation.*

datasets:
  - class: signalai.datasets.FileLoader  # path to the loader class
    kwargs:  # loader arguments
      class_structure:  # name of this class
        tensile_test_normal: tensile_test

      base_dir: '{DATA_DIR}/tensile_tests/200915'  # directory where to search for these files
      channels:  # uses `re` regex syntax, searching for files - more channels are possible
        - re_path: 200915_AE.bin

      relevant_sample_intervals:  # sample interval
      - [15625000, 62500000]

      loading_params:  # how the file is saved
        dtype: float32

      target_dtype: float16

      meta:
        fs: 1562500  # sample frequency
        category: 0  # will go as Y to the network

  - class: signalai.datasets.FileLoader
    kwargs:
      class_structure:
        tensile_test_plastized: tensile_test

      base_dir: '{DATA_DIR}/tensile_tests/200915'
      channels:
        - re_path: '200915_AE.bin'

      relevant_sample_intervals:
      - [966718750, 1010156250]

      loading_params:
        dtype: 'float32'

      target_dtype: float16

      meta:
        fs: 1562500
        category: 1


trial: [0., 0.05]  # for trial whether it works or not

load_to_ram: true


train:
  to_ram: true
  strategy: random  # randomly taking intervals of the signal
  tracks:  # tracks for mixing
    t0:
      superclasses:  # taking from these superclasses
      - tensile_test
      equal_classes: true  # take all classes with the same probability
      transform:  # augmentation possible
        base: []
        X: []
        Y: []

  transform:  # transform after combining
    base: []
    X: []
    Y: []

  X: t0
  Y: t0.meta['category']
