tasks: signalai.tasks.data_preparation.*
uses: "{CONFIGS_DIR}/datasets/burst_detection.yaml"


generators:
  reverb:
    class: signalai.transformers.Reverb
    kwargs:
      transform_chance: 0.2
      room_size: [.0, 1.]
      damping: [.0, 1.]
      wet_level: [.0, 1.]
      dry_level: [.0, 1.]

  gain:
    class: signalai.transformers.Gain
    kwargs:
      transform_chance: 0.2
      gain_db: [-15., 15.]

  x_lambda:
    class: signalai.time_series_gen.LambdaTransformer
    kwargs:
      lambda_w: w.data_arr
      apply_to_ts: true

  y_lambda:
    class: signalai.time_series_gen.LambdaTransformer
    kwargs:
      lambda_w: np.array([w.meta['category']])
      apply_to_ts: true

  sum_ts:
    class: signalai.time_series_gen.TimeSeriesSum

  sum_channels:
    class: signalai.time_series_gen.LambdaTransformer
    kwargs:
      lambda_w: w.sum_channels()
      apply_to_ts: true

  time_map_scale:
    class: signalai.transformers.TimeMapScale
    kwargs:
      first_crop: [512, 512]  # needed when using STFT
      target_length: 1985

  stft:
    class: signalai.transformers.STFT
    kwargs:
      phase_as_meta: true
      n_fft: 1024
      hop_length: 16


data_graph:
  =Z:
    gain:
      reverb:
        burst_train

  =X:
    x_lambda:
      stft:
        sum_ts:
          - gain:
              reverb:
                hum_and_noise
          - sum_channels: Z

  =Y:
    time_map_scale: Z

  =Z_test:
    gain:
      reverb:
        burst_test

  =X_test:
    x_lambda:
      stft:
        sum_ts:
          - gain:
              reverb:
                hum_and_noise
          - sum_channels: Z_test

  =Y_test:
    time_map_scale: Z_test


train_gen:
  inputs:
    - X
  outputs:
    - Y

valid_gen:
  inputs:
    - X_test
  outputs:
    - Y_test

test_gen:
  inputs:
    - X_test
  outputs:
    - Y_test
