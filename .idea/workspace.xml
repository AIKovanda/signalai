<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="75d09377-ee68-4427-9f49-e2f2cbe7486c" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/configs/data_preparation/diamond_noise.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/configs/data_preparation/pipeline.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/configs/generators/diamond_noise.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/configs/processing/pipeline.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/dataset_checker.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/simple_generator.ipynb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/core.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/hfd_spectrogram/hfd_spectrogram.pyx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/hfd_spectrogram/run_hfd_spectrogram.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/signal_tools/fake_datasets.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/signal_tools/generator2.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/signal_tools/signal.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/signal_tools/signal_tools.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/signal_tools/transformers.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/tasks/data_preparation.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/tasks/processing.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/signalai/tools/utils.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/signalai.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/signalai.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/configs/pipelines/pipeline0.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/configs/pipelines/pipeline1.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/166b48865f7d1cd8d35d2fb68967c225/output.npy" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/166b48865f7d1cd8d35d2fb68967c225/relevant_config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/166b48865f7d1cd8d35d2fb68967c225/run_info.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/166b48865f7d1cd8d35d2fb68967c225/used_config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/744a18bba919e462d8e371946e5e30c6/output.npy" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/744a18bba919e462d8e371946e5e30c6/relevant_config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/744a18bba919e462d8e371946e5e30c6/run_info.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/744a18bba919e462d8e371946e5e30c6/used_config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/af50b42f6f2e43c43fe0a5232d144aa6/output.npy" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/af50b42f6f2e43c43fe0a5232d144aa6/relevant_config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/af50b42f6f2e43c43fe0a5232d144aa6/run_info.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/data/af50b42f6f2e43c43fe0a5232d144aa6/used_config.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/signalai/script.py" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/script.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/signalai/tasks.py" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/FlowerChecker/object_detection/src/fch_detection/tasks/detection.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/signalai/core.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/FlowerChecker/object_detection/src/fch_detection/models/yolox/train.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/scripts/script.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/FlowerChecker/object_detection/src/fch_detection/models/core.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/../task-organizer/src/taskorganizer/pipeline.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/FlowerChecker/object_detection/src/fch_detection/models/yolox/yolox/core/launch.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/FlowerChecker/object_detection/src/fch_detection/models/yolox/fchexp.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/FlowerChecker/object_detection/src/fch_detection/models/yolox/yolox/data/datasets/voc.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/signalai/tasks/processing.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/FlowerChecker/object_detection/src/fch_detection/models/yolox/yolox/exp/base_exp.py" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/signalai/tasks/data_preparation.py" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="1yGDAfBqDQ6LvgFWfpfxfAPvf7i" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
  </component>
  <component name="ReaderModeSettings">
    <option name="enabled" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/signalai/hfd_spectrogram" />
      <recent name="$PROJECT_DIR$/configs/processing" />
      <recent name="$PROJECT_DIR$/scripts" />
    </key>
  </component>
  <component name="RunManager" selected="Python.dataset_checker">
    <configuration name="dataset_checker" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="signalai" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/dataset_checker.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="script" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="signalai" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/scripts" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/scripts/script.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.dataset_checker" />
        <item itemvalue="Python.script" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="75d09377-ee68-4427-9f49-e2f2cbe7486c" name="Default Changelist" comment="" />
      <created>1631868889298</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1631868889298</updated>
      <workItem from="1631868890629" duration="85039000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/signalai$dataset_checker.coverage" NAME="dataset_checker Coverage Results" MODIFIED="1632063848795" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
    <SUITE FILE_PATH="coverage/signalai$script.coverage" NAME="script Coverage Results" MODIFIED="1632043123756" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/scripts" />
  </component>
</project>